/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * LoggerPanel.java
 *
 * Created on Apr 20, 2009, 4:16:10 PM
 */
package edu.tuke.beast.panel;

import java.io.BufferedInputStream;
import java.io.FileInputStream;
import java.io.IOException;
import javax.swing.JScrollBar;
import org.apache.log4j.FileAppender;
import org.apache.log4j.Logger;

/**
 *
 * @author vrockai
 */
public class LoggerPanel extends javax.swing.JPanel {

    public static final Logger logger = Logger.getRootLogger();
    private static final long serialVersionUID = -2785956888183904256L;

    /** Creates new form LoggerPanel */
    public LoggerPanel() {
        initComponents();
        FileAppender fa = (FileAppender) (logger.getAppender("R"));
        startReading(fa.getFile());
    }

    protected void startReading(final String name) {

        Thread t = new Thread() {

            @Override
            public void run() {
                try {
                    BufferedInputStream bis = new BufferedInputStream(new FileInputStream(name));
                    int length = -1;
                    while (true) {
                        try {
                            length = bis.available();
                            if (length == -1) {
                                throw new IOException("file ended");
                            }
                            if (length <= 0) {
                                continue;
                            }
                            byte[] data = new byte[length];
                            if (bis.read(data, 0, length) == -1) {
                                continue;
                            }
                            log(data);
                            Thread.sleep(10);
                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        };
        t.start();

    }

    void log(byte[] data) {
        jTextArea1.append(new String(data));
        JScrollBar jsb = jScrollPane1.getVerticalScrollBar();
        jsb.setValue(jsb.getMaximum());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setLayout(new java.awt.BorderLayout());

        jScrollPane1.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                jScrollPane1CaretPositionChanged(evt);
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        add(jScrollPane1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void jScrollPane1CaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jScrollPane1CaretPositionChanged
        
    }//GEN-LAST:event_jScrollPane1CaretPositionChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
