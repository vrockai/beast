/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ConsensusPanel.java
 *
 * Created on Dec 1, 2009, 9:04:30 PM
 */

package edu.tuke.beast.panel;

import edu.tuke.beast.Beast;
import edu.tuke.beast.gui.BeastPanel;
import edu.tuke.beast.lexicon.Lexicon;
import edu.tuke.beast.token.Token;
import edu.tuke.visu.tablemodel.JCommonDefaultModel;
import edu.tuke.visu.tablemodel.JCommonModel;
import java.util.HashMap;
import java.util.Map;
import java.util.Vector;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.border.TitledBorder;

/**
 *
 * @author blur
 */
public class ConsensusPanel extends BeastPanel {

    /** Creates new form ConsensusPanel */
    public ConsensusPanel() {
        initComponents();
    }

    public ConsensusPanel(Beast b) {
        super(b);
        this.beast = b;        
        initComponents();
        setName("Consensus");
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTablesPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();
        jControlPanel = new javax.swing.JPanel();
        jTextFieldInput = new javax.swing.JTextField();
        jButtonSubmit = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        jTablesPanel.setLayout(new java.awt.GridLayout());

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("token1"));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTablesPanel.add(jScrollPane1);

        jScrollPane2.setBorder(javax.swing.BorderFactory.createTitledBorder("token1"));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jTablesPanel.add(jScrollPane2);

        jScrollPane3.setBorder(javax.swing.BorderFactory.createTitledBorder("token1"));

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable3);

        jTablesPanel.add(jScrollPane3);

        jScrollPane4.setBorder(javax.swing.BorderFactory.createTitledBorder("token1"));

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(jTable4);

        jTablesPanel.add(jScrollPane4);

        jScrollPane5.setBorder(javax.swing.BorderFactory.createTitledBorder("token1"));

        jTable5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane5.setViewportView(jTable5);

        jTablesPanel.add(jScrollPane5);

        add(jTablesPanel, java.awt.BorderLayout.CENTER);

        jControlPanel.setLayout(new java.awt.BorderLayout());

        jTextFieldInput.setText("jTextField1");
        jTextFieldInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldInputKeyReleased(evt);
            }
        });
        jControlPanel.add(jTextFieldInput, java.awt.BorderLayout.CENTER);

        jButtonSubmit.setLabel("Submit");
        jButtonSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSubmitActionPerformed(evt);
            }
        });
        jControlPanel.add(jButtonSubmit, java.awt.BorderLayout.EAST);

        add(jControlPanel, java.awt.BorderLayout.SOUTH);
    }// </editor-fold>//GEN-END:initComponents

    private Vector<Integer> parseInput(String input){
        Vector<Integer> result = new Vector<Integer>();

        for (String w : input.split(" ")){
            if( beast.getLexicon().contains(new Token<String>(w)) )
                result.add(beast.getLexicon().getIndex(new Token<String>(w)));
            else
                result.add(Lexicon.NULL_INDEX);
        }

        return result;
    }

    private Vector<String> validateTextInput(String input){
        Vector<String> result = new Vector<String>(5);

        String[] words = input.split(" ");
        if (words.length > 0)
        for (String w : words){
            if( beast.getLexicon().contains(new Token<String>(w)) )
                result.add(w.toLowerCase());
            else
                result.add("?");
        }

        for (int i=words.length;i<5;i++)
            result.add(" ");

        return result;
    }

    private void jTextFieldInputKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldInputKeyReleased
        Vector<String> words = validateTextInput(jTextFieldInput.getText());

        ((TitledBorder)jScrollPane1.getBorder()).setTitle(words.get(0));
        jScrollPane1.repaint();

        ((TitledBorder)jScrollPane2.getBorder()).setTitle(words.get(1));
        jScrollPane2.repaint();

        ((TitledBorder)jScrollPane3.getBorder()).setTitle(words.get(2));
        jScrollPane3.repaint();

        ((TitledBorder)jScrollPane4.getBorder()).setTitle(words.get(3));
        jScrollPane4.repaint();

        ((TitledBorder)jScrollPane5.getBorder()).setTitle(words.get(4));
        jScrollPane5.repaint();
    }//GEN-LAST:event_jTextFieldInputKeyReleased


    public void fillTable(JTable jTable, JScrollPane jScrollPane, Map<Integer, Double> contents, String title){
        Vector<String> columns = new Vector<String>();
        columns.add("w");
        columns.add("s");
        Class[] classes = { String.class, Double.class};

        JCommonDefaultModel newTabMod = new JCommonDefaultModel(columns, classes);

        for (Map.Entry<Integer,Double> entry: contents.entrySet()){
            Vector<Object> row = new Vector<Object>();
            String token = beast.getLexicon().getEntry(entry.getKey()).getValue();
            row.add(token);
            row.add(entry.getValue());
            newTabMod.addRow(row);
        }

        newTabMod.sort(1,false);
        jTable = new JTable(newTabMod);
        jTable.setDefaultRenderer(Double.class, new JCommonModel.DoubleRenderer());
        jTable.setAutoCreateRowSorter(true);
        jScrollPane.setViewportView(jTable);
    }

    private void jButtonSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSubmitActionPerformed
        Vector<Integer> phrase = parseInput(jTextFieldInput.getText());

        System.out.println(phrase.size());
        System.out.println(phrase);

        Vector<Map<Integer, Double>> result = cortex.getConsensusSets(phrase);
        System.out.println(result.size());
        System.out.println(result);


        Map<Integer, Double> empty = new HashMap<Integer, Double>();

        if (result.size() > 0) {
            fillTable(jTable1, jScrollPane1, result.get(0), "");
        } else {
            fillTable(jTable1, jScrollPane1, empty, "");
        }

        if (result.size() > 1) {
            fillTable(jTable2, jScrollPane2, result.get(1), "");
        } else {
            fillTable(jTable2, jScrollPane2, empty, "");
        }

        if (result.size() > 2) {
            fillTable(jTable3, jScrollPane3, result.get(2), "");
        } else {
            fillTable(jTable3, jScrollPane3, empty, "");
        }

        if (result.size() > 3) {
            fillTable(jTable4, jScrollPane4, result.get(3), "");
        } else {
            fillTable(jTable4, jScrollPane4, empty, "");
        }

        if (result.size() > 4) {
            fillTable(jTable5, jScrollPane5, result.get(4), "");
        } else {
            fillTable(jTable5, jScrollPane5, empty, "");
        }

    }//GEN-LAST:event_jButtonSubmitActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonSubmit;
    private javax.swing.JPanel jControlPanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTable jTable5;
    private javax.swing.JPanel jTablesPanel;
    private javax.swing.JTextField jTextFieldInput;
    // End of variables declaration//GEN-END:variables

}
